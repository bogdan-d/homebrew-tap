name: Build asusctl Bottles
on:
  repository_dispatch:
    types: [build-asusctl-bottle]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true

jobs:
  update-formula:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.check.outputs.latest_version }}
      current-version: ${{ steps.check.outputs.current_version }}
      needs-update: ${{ steps.check.outputs.needs_update }}
      branch: ${{ steps.set-branch.outputs.branch }}
      pr-number: ${{ steps.create-pr.outputs.pull-request-number }}
      working-branch: ${{ steps.set-working-branch.outputs.working-branch }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Check version and determine if update needed
        id: check
        run: |
          if [ -n "${{ github.event.client_payload.version || github.event.inputs.version }}" ]; then
            REQUESTED_VERSION="${{ github.event.client_payload.version || github.event.inputs.version }}"
            echo "Checking manual version request: $REQUESTED_VERSION"
            python3 .github/scripts/check_gitlab_release.py --version "$REQUESTED_VERSION"
          else
            echo "Checking for latest GitLab release..."
            python3 .github/scripts/check_gitlab_release.py
          fi

      - name: Set branch output
        id: set-branch
        run: |
          BRANCH="asusctl-${{ steps.check.outputs.latest_version }}-${{ github.run_number }}"
          echo "branch=${BRANCH}" >> "$GITHUB_OUTPUT"

      - name: Update formula version
        if: steps.check.outputs.needs_update == 'true'
        run: |
          VERSION="${{ steps.check.outputs.latest_version }}"

          # Update Formula/asusctl.rb with new tag
          sed -i "s|tag: \".*\"|tag: \"${VERSION}\"|" Formula/asusctl.rb

      - name: Create PR for formula update
        id: create-pr
        if: steps.check.outputs.needs_update == 'true'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7
        with:
          branch: ${{ steps.set-branch.outputs.branch }}
          base: main
          title: "Update asusctl to ${{ steps.check.outputs.latest_version }}"
          commit-message: "chore: update asusctl to ${{ steps.check.outputs.latest_version }}"

      - name: Set working branch
        id: set-working-branch
        run: |
          if [ "${{ steps.check.outputs.needs_update }}" = "true" ] && [ "${{ steps.create-pr.outputs.pull-request-number }}" != "" ]; then
            echo "working-branch=${{ steps.set-branch.outputs.branch }}" >> "$GITHUB_OUTPUT"
            echo "Using PR branch: ${{ steps.set-branch.outputs.branch }}"
          else
            echo "working-branch=main" >> "$GITHUB_OUTPUT"
            echo "Using main branch"
          fi

  build-bottles:
    needs: update-formula
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ needs.update-formula.outputs.working-branch }}

      - name: Set up Homebrew and build bottle
        run: |
          VERSION="${{ needs.update-formula.outputs.version }}"

          # Create a temporary directory for the tap files
          mkdir -p /tmp/homebrew-tap

          # Copy tap files to the temporary directory
          cp -r . /tmp/homebrew-tap/

          # Run Homebrew operations in the container with proper volume mounts
          docker run --rm \
            -v "/tmp/homebrew-tap:/tmp/homebrew-tap" \
            -v "${{ github.workspace }}:/workspace" \
            -w /workspace \
            homebrew/ubuntu24.04:latest \
            bash -c "
              brew update-reset

              # Copy the tap to Homebrew's directory
              mkdir -p /home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/ublue-os
              cp -r /tmp/homebrew-tap /home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/ublue-os/homebrew-tap

              # Install and bottle
              brew install --build-bottle 'ublue-os/tap/asusctl'

              # Change to writable directory for bottling
              cd /tmp
              brew bottle --json --root-url='https://github.com/${{ github.repository }}/releases/download/asusctl-${VERSION}' 'ublue-os/tap/asusctl'

              # Make workspace writable and copy bottles
              sudo chown -R \$(whoami) /workspace
              cp *.bottle.* /workspace/
            "

      - name: Rename bottle files to fix naming convention
        run: |
          echo "Fixing file permissions and renaming bottle files from -- to - format..."
          sudo chown -R "$(whoami)" .
          for file in *.bottle.*; do
            if [[ -f "$file" ]]; then
              newname="${file/--/-}"
              if [[ "$file" != "$newname" ]]; then
                mv "$file" "$newname"
                echo "Renamed: $file -> $newname"
              fi
            fi
          done
          echo "Files after renaming:"
          ls -la -- *.bottle.*

      - name: Upload bottle artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: bottle
          path: '*.bottle.*'

  upload-bottles-to-pr:
    needs: [update-formula, build-bottles]
    runs-on: ubuntu-24.04
    if: needs.update-formula.outputs.pr-number != ''
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ needs.update-formula.outputs.working-branch }}

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download all bottles
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: bottle
          path: .

      - name: Update formula with bottle SHAs
        run: |
          # Set up the tap so Homebrew can find the formula
          mkdir -p "$(brew --repository)/Library/Taps/ublue-os"
          cp -r . "$(brew --repository)/Library/Taps/ublue-os/homebrew-tap"
          brew bottle --merge --write --no-commit ./*.bottle.json

      - name: Set up git branch
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git push --set-upstream origin ${{ needs.update-formula.outputs.working-branch }}

      - name: Commit bottle updates
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9
        with:
          message: 'chore: add asusctl bottles for ${{ needs.update-formula.outputs.version }}'

  upload-bottles-to-release:
    needs: [update-formula, build-bottles]
    runs-on: ubuntu-24.04
    if: needs.update-formula.outputs.pr-number == ''
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ needs.update-formula.outputs.working-branch }}

      - name: Download all bottles
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: bottle
          path: .

      - name: Check if release exists
        id: check-release
        run: |
          VERSION="${{ needs.update-formula.outputs.version }}"
          if gh release view "asusctl-$VERSION" --repo "$GITHUB_REPOSITORY" >/dev/null 2>&1; then
            echo "release-exists=true" >> "$GITHUB_OUTPUT"
            echo "Release asusctl-$VERSION already exists"
          else
            echo "release-exists=false" >> "$GITHUB_OUTPUT"
            echo "Release asusctl-$VERSION does not exist"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new release
        if: steps.check-release.outputs.release-exists == 'false'
        run: |
          VERSION="${{ needs.update-formula.outputs.version }}"
          gh release create "asusctl-$VERSION" ./*.bottle.* \
            --title "asusctl $VERSION bottles" \
            --notes "Bottles for asusctl $VERSION" \
            --repo "$GITHUB_REPOSITORY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update existing release
        if: steps.check-release.outputs.release-exists == 'true'
        run: |
          VERSION="${{ needs.update-formula.outputs.version }}"
          gh release upload "asusctl-$VERSION" ./*.bottle.* \
            --clobber \
            --repo "$GITHUB_REPOSITORY"
          echo "Updated existing release with new bottles"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update formula with bottle SHAs
        if: success()
        run: |
          # Only update if bottle.json files exist
          if ls ./*.bottle.json 1> /dev/null 2>&1; then
            echo "Setting up Homebrew for bottle merge..."
            export HOMEBREW_NO_AUTO_UPDATE=1
            export HOMEBREW_NO_INSTALL_FROM_API=1

            # Install Homebrew if not available
            if ! command -v brew &> /dev/null; then
              /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
              eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
            fi

            # Set up the tap so Homebrew can find the formula
            echo "Setting up tap in Homebrew directory..."
            mkdir -p /home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/ublue-os
            cp -r . /home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/ublue-os/homebrew-tap

            echo "Merging bottle SHAs into formula..."
            brew bottle --merge --write --no-commit ./*.bottle.json

            echo "Checking for changes..."
            if git diff --quiet Formula/asusctl.rb; then
              echo "No changes to formula after bottle merge"
            else
              echo "Formula updated with bottle SHAs, committing..."
              git config --global user.email "action@github.com"
              git config --global user.name "GitHub Action"
              git add Formula/asusctl.rb
              git commit -m "chore: add asusctl bottles for ${{ needs.update-formula.outputs.version }}"
              git push origin main
            fi
          else
            echo "No bottle.json files found, skipping formula update"
          fi